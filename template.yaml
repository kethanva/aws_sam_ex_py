AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  sam-app
  Sample SAM Template for sam-app

Globals:
  Function:
    Timeout: 3

Parameters: 
  DeploymentEnvType: 
    Type: String
    Default: Dev
    AllowedValues:
      - Dev
      - Stg
      - Prod
    Description: "What DeploymentEnv is this?"

Mappings: 
  DeploymentEnvMap:
    Dev: 
      DeployRegion: "us-west-2"
      AccountId: "549665669407"
      SGIds:
        - "sg-789b1f5e"
      SubnetIds:
        - "subnet-ff78a6de"
        - "subnet-c59af988"
    Stg:
      DeployRegion: "us-west-2"
      AccountId: "549665669407"
      SGIds:
        - "sg-789b1f5e"
      SubnetIds:
        - "subnet-ff78a6de"
        - "subnet-c59af988"
    Prod:
      DeployRegion: "us-west-2"
      AccountId: "156682444160"
      SGIds:
        - "sg-789b1f5e"
      SubnetIds:
        - "subnet-ff78a6de"
        - "subnet-c59af988"

Resources:
  SampleLambdaFunctionRole:
    Type: AWS::IAM::Role
    DependsOn:
      - CommonLambdaExecutePolicy
      - CommonLambdaVpcFullPolicy
    Properties:
      RoleName : !Sub ${DeploymentEnvType}SampleLambdaFunctionRole
      Description : !Sub ${DeploymentEnvType} SampleLambdaFunctionRole role created for Lambda function
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
        - Effect: Allow
          Principal:
            Service:
            - lambda.amazonaws.com
          Action:
          - sts:AssumeRole
      Path: "/"
      ManagedPolicyArns:
        - !Ref CommonLambdaExecutePolicy
        - !Ref CommonLambdaVpcFullPolicy
      Policies:
      - PolicyName: AmazonS3FullAccess
        PolicyDocument:
          Version: 2012-10-17
          Statement:
          - Effect: Allow
            Action: s3:*
            Resource:
            - arn:aws:s3:::exchange-data-raw
            - arn:aws:s3:::exchange-data-raw/*

  CommonLambdaExecutePolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      ManagedPolicyName: !Sub ${DeploymentEnvType}-CommonLambdaExecutePolicy
      Description: !Sub Policy for ${DeploymentEnvType} CommonLambdaExecutePolicy
      Path: /
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Action:
              - sts:AssumeRole
              - sts:GetSessionToken
              - logs:CreateLogGroup
              - logs:CreateLogStream
              - logs:PutLogEvents
            Resource: "*"

  CommonLambdaS3FullPolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      ManagedPolicyName: !Sub ${DeploymentEnvType}-CommonLambdaS3FullPolicy
      Description: !Sub Policy for ${DeploymentEnvType} CommonLambdaS3FullPolicy
      Path: /
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Action: s3:*
            Resource: "*"

  CommonLambdaVpcFullPolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      ManagedPolicyName: !Sub ${DeploymentEnvType}-CommonLambdaVpcFullPolicy
      Description: !Sub Policy for ${DeploymentEnvType} CommonLambdaVpcFullPolicy
      Path: /
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Action:
             - ec2:AssignPrivateIpAddresses
             - ec2:UnassignPrivateIpAddresse
             - ec2:DescribeInstances
             - ec2:CreateNetworkInterface
             - ec2:AttachNetworkInterface
             - ec2:DescribeNetworkInterfaces
             - ec2:DeleteNetworkInterface
             - ec2:DetachNetworkInterface
             - ec2:ModifyNetworkInterfaceAttribute
             - ec2:ResetNetworkInterfaceAttribute
             - autoscaling:CompleteLifecycleAction
            Resource: "*"

  SampleFunction:
    Type: AWS::Serverless::Function
    DependsOn:
      - SampleLambdaFunctionRole
#    DeletionPolicy : Retain
    Properties:
      FunctionName: !Sub '${DeploymentEnvType}-samplefunction1'
      Description: !Sub 'Sample function for ${DeploymentEnvType} and created by ${AWS::StackName}'
      CodeUri: sample_code1/
      MemorySize: 128
      Role: !GetAtt SampleLambdaFunctionRole.Arn
      Handler: app.lambda_handler
      Runtime: python3.8
      VpcConfig:
            SecurityGroupIds: !FindInMap [DeploymentEnvMap, !Ref DeploymentEnvType, SGIds]
            SubnetIds: !FindInMap [DeploymentEnvMap, !Ref DeploymentEnvType, SubnetIds]
      Layers:
        - !Ref Layer1Deps
      Environment:
        Variables:
          TEST_VAR: "TEST"
          ENV_TYPE: !Ref DeploymentEnvType
      Events:
        HelloWorld:
          Type: Api
          Properties:
            Path: /hello
            Method: get

  Layer1Deps:
      Type: AWS::Serverless::LayerVersion
      Properties:
          LayerName: sam-app-dependencies1
          Description: Dependencies for sam app.
          ContentUri: layer1/
          CompatibleRuntimes:
            - python3.8
            - python3.7
          LicenseInfo: 'MIT'
          RetentionPolicy: Retain

Outputs:
  SampleApi:
    Description: "API Gateway endpoint URL for Prod stage "
    Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/hello/"
  #SampleFunction:
  #  Description: "Hello World Lambda Function ARN"
  #  Value: !GetAtt SampleFunction.Arn
  #SampleFunctionIamRole:
  #  Description: "Implicit IAM Role created for Hello World function"
  #  Value: !GetAtt SampleFunctionRole.Arn



#sam build --template template.yaml --parameter-overrides "ParameterKey=DeploymentEnvType,ParameterValue=Dev"
#sam build 
#sam package --template-file template.yaml --s3-bucket sam-tests1 --output-template-file package.yaml 
#sam deploy --template-file package.yaml --s3-bucket sam-tests1 --stack-name lambda-apps-dev --capabilities CAPABILITY_IAM --region us-east-1 --no-confirm-changeset --parameter-overrides "ParameterKey=DeploymentEnvType,ParameterValue=Dev"
#˜˜
#sam deploy --template-file package.yaml --s3-bucket sam-tests1 --stack-name lambda-apps-dev --capabilities CAPABILITY_NAMED_IAM --region us-east-1 --no-confirm-changeset --parameter-overrides "ParameterKey=DeploymentEnvType,ParameterValue=Dev"

